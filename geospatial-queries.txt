use awesomeplaces
db.places.insertOne({name: "California Academy of Sciences", location: { type: "Point", coordinates: [ -122.4682887, 37.7698688 ] }})

db.places.findOne()
//This is now geoJSON Object
{
        "_id" : ObjectId("5e2b55bb656120e99bcd6d5c"),
        "name" : "California Academy of Sciences",
        "location" : {
                "type" : "Point",
                "coordinates" : [
                        -122.4682887,
                        37.7698688
                ]
        }
}

db.places.createIndex({location: "2dsphere"})
db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.471114, 37.771104 ] }}}}).pretty()

//Get places within 10 and 500 meters of the given location
db.places.find({location: {$near: {$geometry: {type: "Point", coordinates: [-122.471114, 37.771104 ]} ,$maxDistance: 500, $minDistance: 10}}}).pretty()

-------------------------------------------------------------------------------------------------------------------------------------
//Finding places inside a Certain Area
db.places.insertOne({name: "Conservatory of Flowers", location: { type: "Point", coordinates: [ -122.4615748, 37.7701756 ] }})
db.places.insertOne({name: "Golden Gate Park Tennis Courts", location: { type: "Point", coordinates: [ -122.4593702, 37.7705046 ] }})
db.places.insertOne({name: "Nopa", location: { type: "Point", coordinates: [ -122.4389058, 37.7747415] }})

const p1 = [-122.4547, 37.77473]
const p2 = [-122.45303, 37.76641]
const p3 = [-122.51026, 37.76411]
const p4 = [-122.51088, 37.77131]

//This query will not include Nopa as it is outside of the polygon
db.places.find({location: {$geoWithin: {$geometry: {type: "Polygon", coordinates: [[p1,p2,p3,p4,p1] ] }}}}).pretty() 

-------------------------------------------------------------------------------------------------------------------------------------
//Finding out if a user is inside a specific area
db.areas.insertOne({name: "Golden Gate Park", area: {type: "Polygon", coordinates: [[p1,p2,p3,p4,p1]]}})
db.areas.createIndex({area: "2dsphere"})

db.areas.find({area: {$geoIntersects: {$geometry: {type: "Point", coordinates: [-122.49089, 37.76992] }}}}).pretty() 
db.areas.find({area: {$geoIntersects: {$geometry: {type: "Point", coordinates: [-122.48446, 37.77776] }}}}).pretty() //Outside the area

-------------------------------------------------------------------------------------------------------------------------------------
//Finding places within a certain radius.

//Includes places within one kilometer of the coordinates provided
db.places.find({location: {$geoWithin: {$centerSphere: [[-122.46203, 37.77286], 1/6378.1]}}}).pretty() 

db.places.updateOne({_id: ObjectId("5e2b55bb656120e99bcd6d5c")}, {$set: {location: {type: "Point", coordinates: [-122.46636, 37.77014 ]}}})